# 根日志记录器，如果没有找到合适的appender的时候，默认使用根日志记录器
# 下面一行表示默认级别为error，输出到console和file两个appender
log4j.rootLogger = debug,console,file

# 下面的com.fkjava属于我们自己程序里面的日志记录器的前缀
# 一般我们自己的日志记录器，都是通过Class创建的，包含了类的全名。
# log4j 会基于包名精度优先模糊匹配。下面表示输出debug级别的信息。
log4j.logger.org.fkjava=debug
log4j.logger.org.fkjava.log4j1=debug

## APPENDERS ##
# 输出目标，下面这个输出目标名为console，目标的实现程序为ConsoleAppender，其实就是System.out
log4j.appender.console = org.apache.log4j.ConsoleAppender
# 下面两行表示日志输出的内容格式
log4j.appender.console.layout = org.apache.log4j.PatternLayout
# %p 级别
# %m 消息的内容
# %n 换行
# %d 时间
# %l 日志输出的类名，包括方法名、行号、文件名！
# %t 线程名称
# %n 换行
log4j.appender.console.layout.ConversionPattern = %p: %m%n      %d %l %t%n

# 下面使用DailyRollingFileAppender作为输出目标，名为file。
# 每天产生一个日志记录文件，记录到C:/log/oa.log文件里面。
# 第二天的时候，就会把oa.log重命名为oa_2017-6-30.log这种格式！
log4j.appender.file = org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.DatePattern='_'yyyy-MM-dd'.log'
log4j.appender.file.File = C:/log/oa.log
log4j.appender.file.layout = org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern = %p: %m%n      %d %l %t%n